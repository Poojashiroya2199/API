{"version":3,"sources":["../../src/middleware/userMiddleware.js"],"names":["require","Router","body","validationResult","UserCreationError","UserValidationError","User","module","exports","userMiddleware","post","isEmail","notEmpty","isLength","min","isAlphanumeric","max","req","res","next","erros","isEmpty","console","log","errors","send"],"mappings":";;eAAeA,OAAO,CAAC,SAAD,C;IAAfC,M,YAAAA,M;;gBACwBD,OAAO,CAAC,mBAAD,C;IAA/BE,I,aAAAA,I;IAAKC,gB,aAAAA,gB;;gBACmCH,OAAO,CAAC,kBAAD,C;IAA/CI,iB,aAAAA,iB;IAAkBC,mB,aAAAA,mB;;gBACHL,OAAO,CAAC,sBAAD,C;IAAdM,I;;AACfC,MAAM,CAACC,OAAP,GAAe,YAAI;AACf,MAAMC,cAAc,GAACR,MAAM,EAA3B;AAEAQ,EAAAA,cAAc,CAACC,IAAf,CAAoB,GAApB,EACAR,IAAI,CAAC,OAAD,CAAJ,CAAcS,OAAd,EADA,EAEAT,IAAI,CAAC,UAAD,CAAJ,CAAiBU,QAAjB,GAA4BC,QAA5B,CAAqC;AAACC,IAAAA,GAAG,EAAC;AAAL,GAArC,EAA8CC,cAA9C,EAFA,EAGAb,IAAI,CAAC,WAAD,CAAJ,CAAkBU,QAAlB,GAA6BC,QAA7B,CAAsC;AAACC,IAAAA,GAAG,EAAC,CAAL;AAAOE,IAAAA,GAAG,EAAC;AAAX,GAAtC,CAHA,EAIAd,IAAI,CAAC,UAAD,CAAJ,CAAiBU,QAAjB,GAA4BC,QAA5B,CAAqC;AAACC,IAAAA,GAAG,EAAC,CAAL;AAAOE,IAAAA,GAAG,EAAC;AAAX,GAArC,CAJA,EAKA,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACZ;AACA,QAAMC,KAAK,GAACjB,gBAAgB,CAACc,GAAD,CAA5B;;AACA,QAAG,CAACG,KAAK,CAACC,OAAN,EAAJ,EAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,YAAM,IAAIlB,mBAAJ,CAAwBe,KAAK,CAACI,MAA9B,CAAN;AACH;;AACDL,IAAAA,IAAI;AACP,GAbD,EAHe,CAiBf;;AACAV,EAAAA,cAAc,CAACC,IAAf,CAAoB,GAApB,EAAwB,UAACO,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACpCD,IAAAA,GAAG,CAACO,IAAJ,CAAS,cAAT;AACH,GAFD;AAGA,SAAOhB,cAAP;AACH,CAtBD","sourcesContent":["const {Router}=require(\"express\");\r\nconst {body,validationResult} =require(\"express-validator\");\r\nconst {UserCreationError,UserValidationError} =require(\"./../util/errors\");\r\nconst {default:User} =require(\"./../model/userModel\");\r\nmodule.exports=()=>{\r\n    const userMiddleware=Router();\r\n\r\n    userMiddleware.post(\"/\",\r\n    body(\"email\").isEmail(),\r\n    body(\"password\").notEmpty().isLength({min:6}).isAlphanumeric(),\r\n    body(\"firstName\").notEmpty().isLength({min:3,max:25}),\r\n    body(\"userName\").notEmpty().isLength({min:3,max:25}),\r\n    (req,res,next)=>{\r\n        //validate post data\r\n        const erros=validationResult(req);\r\n        if(!erros.isEmpty()){\r\n            console.log(\"user data is invalid\");\r\n            throw new UserValidationError(erros.errors)\r\n        }\r\n        next();\r\n    })\r\n    //get user data\r\n    userMiddleware.post(\"/\",(req,res,next)=>{\r\n        res.send(\"user created\");\r\n    })\r\n    return userMiddleware;\r\n}"],"file":"userMiddleware.js"}