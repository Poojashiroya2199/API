{"version":3,"sources":["../../src/model/userModel.js"],"names":["mongoose","require","constants","userSchema","Schema","firstName","type","String","required","lastName","userName","unique","phoneNumber","Number","validate","validator","value","test","message","props","email","password","userType","values","Object","includes","User","model","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAACC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,SAAS,GAACD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAME,UAAU,GAAC,IAAIH,QAAQ,CAACI,MAAb,CAAoB;AACjCC,EAAAA,SAAS,EAAC;AACNC,IAAAA,IAAI,EAACC,MADC;AAENC,IAAAA,QAAQ,EAAC;AAFH,GADuB;AAKjCC,EAAAA,QAAQ,EAAC;AACLH,IAAAA,IAAI,EAACC,MADA;AAELC,IAAAA,QAAQ,EAAC;AAFJ,GALwB;AASjCE,EAAAA,QAAQ,EAAC;AACLC,IAAAA,MAAM,EAAC,IADF;AAELL,IAAAA,IAAI,EAACC,MAFA;AAGLC,IAAAA,QAAQ,EAAC;AAHJ,GATwB;AAcjCI,EAAAA,WAAW,EAAC;AACRD,IAAAA,MAAM,EAAC,IADC;AAERL,IAAAA,IAAI,EAACO,MAFG;AAGRL,IAAAA,QAAQ,EAAC,IAHD;AAIRM,IAAAA,QAAQ,EAAC;AACLC,MAAAA,SAAS,EAAC,mBAACC,KAAD;AAAA,eAAW,SAASC,IAAT,CAAcD,KAAd,CAAX;AAAA;AADL,KAJD;AAORE,IAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,uBAAOA,KAAK,CAACH,KAAb;AAAA;AAPN,GAdqB;AAuBjCI,EAAAA,KAAK,EAAC;AACFT,IAAAA,MAAM,EAAC,IADL;AAEFL,IAAAA,IAAI,EAACC,MAFH;AAGFC,IAAAA,QAAQ,EAAC;AAHP,GAvB2B;AA4BjCa,EAAAA,QAAQ,EAAC;AACLf,IAAAA,IAAI,EAACC;AADA,GA5BwB;AA+BjCe,EAAAA,QAAQ,EAAC;AACLhB,IAAAA,IAAI,EAACO,MADA;AAELL,IAAAA,QAAQ,EAAC,IAFJ;AAGLM,IAAAA,QAAQ,EAAC;AACLC,MAAAA,SAAS,EAAC,mBAACQ,MAAD;AAAA,eAAaC,MAAM,CAACD,MAAP,CAAcrB,SAAS,CAACoB,QAAxB,EAAkCG,QAAlC,CAA2CF,MAA3C,CAAb;AAAA;AADL,KAHJ;AAMLL,IAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,uBAAOA,KAAK,CAACH,KAAb;AAAA;AANT;AA/BwB,CAApB,CAAjB;AAwCA,IAAMU,IAAI,GAAG1B,QAAQ,CAAC2B,KAAT,CAAe,MAAf,EAAsBxB,UAAtB,CAAb;AAEAyB,MAAM,CAACC,OAAP,GAAgBH,IAAhB","sourcesContent":["const mongoose=require(\"mongoose\");\r\nconst constants=require(\"./../util/constants\");\r\nconst userSchema=new mongoose.Schema({\r\n    firstName:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    lastName:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    userName:{\r\n        unique:true,\r\n        type:String,\r\n        required:true\r\n    },\r\n    phoneNumber:{\r\n        unique:true,\r\n        type:Number,\r\n        required:true,\r\n        validate:{\r\n            validator:(value) => /\\d{10}/.test(value)\r\n        },\r\n        message: props => `${props.value} is not a valid phone number`\r\n    },\r\n    email:{\r\n        unique:true,\r\n        type:String,\r\n        required:true\r\n    },\r\n    password:{\r\n        type:String\r\n    },\r\n    userType:{\r\n        type:Number,\r\n        required:true,\r\n        validate:{\r\n            validator:(values) =>  Object.values(constants.userType).includes(values)\r\n        },\r\n        message: props => `${props.value}  invalid user type`\r\n    }\r\n});\r\nconst User = mongoose.model('User',userSchema)\r\n\r\nmodule.exports= User;\r\n"],"file":"userModel.js"}